{"openapi":"3.0.3","info":{"title":"MapApp","version":"1.0","description":"An API for application, which helps delivery companies to plan their routes.","x-logo":{"url":""}},"servers":[{"url":"http://localhost:8081/api/v2","description":"Local server","x-last-modified":1718622672779}],"paths":{"/data/profile":{"summary":"Path for managing user profile","description":"Supports all CRUD operations, as well as signing in functionality.\nThe path does not support the read all operation due to personal data security policies.\n\n| Requirement / Function | Is Required / Has |\n| -------------------------------- | ---------------------- |\n| Authentication                    | partially                  |\n| Authorization                       | partially                  |\n| Pagination                             | no                              |\n| Search                                     | no                              |","get":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileCreate"},"example":"#/components/examples/ProfileCreate"}},"required":false},"tags":[]},"put":{"tags":[]},"post":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileCreate"}}},"required":true},"tags":[],"operationId":"create_profile","summary":"Create user profile","description":"User profile is used to identify a user and allow to sign in to the application. \nSigned in user has more functionality as he/she can save different data associated with the user.\n\n| Requirement / Function | Is Required / Has |\n| -------------------------- | ------------------  |\n| Authentication                | no                        |\n| Authorization                  | no                        |\n| Pagination                       | no                        |\n| Search                             | no                        |","responses":{"201":{"description":"Successfully created","content":{"application/json":{"schema":{"type":"object","description":"Success response object with created profile. Notice, that it will not return the password field for security reasons","properties":{"username":{"type":"string","description":"The username of the profile","example":"user1"},"id":{"type":"integer","description":"The id of the profile","example":1}}}}},"x-last-modified":1718631696389},"400":{"$ref":"#/components/responses/400","x-last-modified":1718629294829},"409":{"$ref":"#/components/responses/409","x-last-modified":1718631315457},"500":{"$ref":"#/components/responses/500","x-last-modified":1718631329811}}},"delete":{"tags":[]},"x-last-modified":1718625394347}},"components":{"schemas":{"APIErrorRes":{"description":"Error response. Notice that errors field is always an array. Data can be ever empty object, null or undefined.","type":"object","properties":{"data":{"description":"An empty object for the data field","type":"object"},"errors":{"type":"array","items":{"$ref":"#/components/schemas/APIError"}}},"x-last-modified":1718628043172},"APIError":{"description":"Interface for all errors, which may occur. Notice that the error has type property, which can be used for determining the object type and be parsed accordingly. If any unexpected errors occurred where will be additional field containing the error. The name field is common reason describing what kind of error happened and it is a enum value. The reason field is a concrete reason why the error happened and it is a enum value. The location field is describing possible error place in the request and it a enum value.\n\nErrorName enum:\n| Key | Value |\n| -------- | -------- |\n| NOT_FOUND | 'NOT_FOUND' | \n| BAD_REQUEST | 'BAD_REQUEST' | \n| VALIDATION | 'VALIDATION' | \n| NOT_AUTHENTICATED | 'NOT_AUTHENTICATED' | \n| NOT_AUTHORIZED | 'NOT_AUTHORIZED' | \n| TOO_MANY_REQUESTS | 'TOO_MANY_REQUESTS' | \n| SERVER_ERROR | 'SERVER_ERROR' | \n| UNEXPECTED | 'UNEXPECTED' | \n\nErrorReason enum:\n| Key | Value |\n| -------- | -------- |\n| NOT_FOUND | 'NOT_FOUND' | \n| BAD_REQUEST | 'BAD_REQUEST' | \n| REQUIRED | 'REQUIRED' | \n| NOT_ALLOWED | 'NOT_ALLOWED' | \n| VALIDATION | 'VALIDATION' | \n| NOT_STRING | 'NOT_STRING' | \n| NOT_NUMBER | 'NOT_NUMBER' | \n| NOT_BOOLEAN | 'NOT_BOOLEAN' | \n| NOT_AUTHENTICATED | 'NOT_AUTHENTICATED' | \n| AUTH_TOKEN_NOT_PROVIDED | 'AUTH_TOKEN_NOT_PROVIDED' | \n| INVALID_AUTH_TOKEN_FORMAT | 'INVALID_AUTH_TOKEN_FORMAT' | \n| INVALID_AUTH_TOKEN | 'INVALID_AUTH_TOKEN' | \n| AUTHENTICATION_FAILED | 'AUTHENTICATION_FAILED' | \n| WRONG_CREDENTIALS | 'WRONG_CREDENTIALS' | \n| NOT_AUTHORIZED | 'NOT_AUTHORIZED' | \n| TOO_MANY_REQUESTS | 'TOO_MANY_REQUESTS' | \n| SERVER_MISCONFIGURED | 'SERVER_MISCONFIGURED' | \n| SERVER_ERROR | 'SERVER_ERROR' | \n| UNEXPECTED | 'UNEXPECTED' | \n\nErrorLocation enum:\n| Key | Value |\n| -------- | -------- |\n| HEADER | 'header' | \n| BODY | 'body' | \n| PARAM | 'param' | \n| QUERY | 'query' | ","required":[],"enum":[],"type":"object","properties":{"reason":{"description":"The reason for the error","type":"string","example":"REQUIRED"},"status":{"description":"The HTTP status code","type":"integer","example":400},"location":{"description":"The approximate location of the error","type":"string","example":"body"},"message":{"description":"The error message","type":"string","example":"\"password\" is required"},"endpoint":{"description":"The endpoint where the error occurred","type":"string","example":"/api/v2/data/profile"},"field":{"description":"The field causing the error","type":"string","example":"password"},"additional":{"nullable":true,"description":"Additional information about the error","type":"string"},"name":{"description":"The name of the error","type":"string","example":"VALIDATION"},"type":{"description":"The type of the error","type":"string","example":"APIError"}},"x-last-modified":1718631391947},"ProfileCreate":{"description":"Profile creation request body","required":["username","password"],"type":"object","properties":{"username":{"description":"unique","type":"string","example":"user1"},"password":{"type":"string","example":"my_password"}},"x-last-modified":1718631417714}},"examples":{"ProfileCreate":{"summary":"Example of ProfileCreate request object","value":{"username":"user1","password":"my_password"},"x-last-modified":1718622389962}},"securitySchemes":{},"headers":{},"responses":{"400":{"description":"Validation error response. It may occur if request field(s) is not defined, or field(s) data type is wrong or any other error against schema.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/APIErrorRes"}}},"x-last-modified":1718629220466},"401":{"description":"Authentication error response. It may occur if the request does not contain \"Authorization\" header with the Bearer token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/APIErrorRes"},"example":{"errors":[{"reason":"AUTHENTICATION_FAILED","status":401,"location":"header","message":"Could not authenticate with provided token. Token is invalid or expired","endpoint":"/api/v2/data/profile","field":"Authorization","name":"NOT_AUTHENTICATED","type":"APIError"}]}}},"x-last-modified":1718629884243},"403":{"description":"Authorization error response. It may occur if the user is not allowed to execute certain action","content":{"application/json":{"schema":{"$ref":"#/components/schemas/APIErrorRes"},"example":{"errors":[{"reason":"NOT_AUTHORIZED","status":403,"message":"Action execution denied","endpoint":"/api/v2/data/profile","name":"NOT_AUTHORIZED","type":"APIError"}]}}},"x-last-modified":1718630393958},"409":{"description":"Conflict error response. It may occur if some of the request field(s) is not unique","content":{"application/json":{"schema":{"$ref":"#/components/schemas/APIErrorRes"},"example":{"errors":[{"reason":"NOT_UNIQUE","status":409,"location":"body","message":"User with that username already exists","endpoint":"/api/v2/data/profile","field":"username","name":"BAD_REQUEST","type":"APIError"}]}}},"x-last-modified":1718631266638},"500":{"description":"Server error response. It occurs unexpectedly. The additional field contains an error object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/APIErrorRes"},"example":{"errors":[{"reason":"UNEXPECTED","status":500,"message":"Unexpected server error occurred","endpoint":"/api/v2/data/profile","additional":{"message":"throwAPIError is not defined","stack":"ReferenceError: throwAPIError is not defined\n    at createProfile (file:///app/server/router/api/v2/data/profile.js:25:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async file:///app/server/router/api/v2/routeBuilder/core/pipelineHandlers/addController.js:12:30","name":"ReferenceError"},"name":"UNEXPECTED","type":"APIError"}]}}},"x-last-modified":1718631059302}},"parameters":{}},"externalDocs":{"description":"GitHub wikipages for the API, explains the app and API structures in general","url":"https://github.com/leolab1337/map_app/wiki"},"tags":[],"security":[]}